-- Lilypond: http://lilypond.org/doc/v2.20/Documentation/notation/structure-of-a-score
-- http://lilypond.org/doc/v2.20/Documentation/notation/cheat-sheet
-- http://lilypond.org/doc/v2.20/Documentation/learning/introduction-to-the-lilypond-file-structure
-- BNFC grammar for C: https://github.com/BNFC/bnfc/blob/master/examples/C/C.cf
{--
A \score block must contain a single music expression delimited by curly brackets:
\score {
  …
}
--}

-- TODO top level defs are entrypoint?
--entrypoints Score, Def ; -- Score block works without entrypoints, but not other combinations?

ScoreFile . Entry ::= [Def] ;
separator Def "" ;
entrypoints Entry ;

VersionDef .    Def        ::= "\\version" String ;
VariableDef .   Def        ::= Ident "=" MusicExpr ;
ScoreDef .      Def        ::= Score ;


ScoreBlock .    Score      ::= "\\score" "{" MusicExpr [ScoreDef] "}" ;
-- List
coercions MusicExpr 3 ;
-- not quite true. ExpList .       MusicExpr1  ::= [ MusicExpr2 ] ;
RelativeExp .   MusicExpr1  ::= "\\relative" NoteToken MusicExpr ; -- ""\relative startpitch musicexpr"
CompoundExp .   MusicExpr2  ::= "{" [ MusicExpr ] "}" ;
NoteExp .       MusicExpr2  ::= NoteToken ;
KeyExpMajmin .  MusicExpr1  ::= "\\key" NoteToken MajMin ;
KeyExp .        MusicExpr1  ::= "\\key" NoteToken ;
TimeExp .       MusicExpr1  ::= "\\time" Integer "/" Integer ; -- TODO verify later with other time signatures
VarExp .        MusicExpr1  ::= VarToken ;
FermExp .       MusicExpr1  ::= "\\fermata" ;
StaffExpWith .  MusicExpr1  ::= "\\new" "Staff" WithBlock MusicExpr; -- TODO probably create more general \new Type --Also, precedence / nesting
StaffExp .      MusicExpr1  ::= "\\new" "Staff" MusicExpr;
TextExp .       MusicExpr1  ::= DirectionIndicator InlineText ;
BarExp .        MusicExpr1  ::= "|" ;
CreStartExp .   MusicExpr1  ::= "\\<" ;
DeCreStartExp . MusicExpr1  ::= "\\>" ;
CreEndExp .     MusicExpr1  ::= "\\!" ;
RepeatExpr .    MusicExpr1  ::= "\\repeat" RepeatKind Integer MusicExpr ; -- http://lilypond.org/doc/v2.20/Documentation/notation/repeats
RepeatExprWithAlt . MusicExpr1  ::= "\\repeat" RepeatKind Integer MusicExpr RepeatEnding ;
SlurStartExp .  MusicExpr1  ::= "(" ; -- TODO somehow can't parse simple slurs yet...
--TODO Test slurs as tokens? Check other backends?
SlurEndExp .    MusicExpr1  ::= ")" ;

VoltaRepeat .   RepeatKind  ::= "volta" ;
UnfoldRepeat .  RepeatKind  ::= "unfold" ;
PercentRepeat . RepeatKind  ::= "percent" ;
TremoloRepeat . RepeatKind  ::= "tremolo" ;

AlternativeBlock . RepeatEnding ::= "\\alternative" "{" [MusicExpr] "}";

-- https://lilypond.org/doc/v2.20/Documentation/notation/writing-text
-- CreEndExp .     MusicExpr1  ::= "\\!" ; --\markup{ \italic "ten." }|-- https://lilypond.org/doc/v2.20/Documentation/notation/formatting-text

-- textExpression? Articulation
-- https://lilypond.org/doc/v2.20/Documentation/notation/direction-and-placement#articulation-direction-indicators
UpDirection .      DirectionIndicator ::= "^" ;
DownDirection .    DirectionIndicator ::= "_" ;
DefaultDirection . DirectionIndicator ::= "-" ;
NoDirection .      DirectionIndicator ::= ;

InlineString . InlineText ::= String ;
MarkupBlock .  InlineText ::= "\\markup" "{" "}" ; -- Quite extensive... https://lilypond.org/doc/v2.20/Documentation/notation/text-markup-commands

LayoutBlock .   ScoreDef   ::= "\\layout" "{" "}" ; -- TODO find out what can be here
MidiBlock .     ScoreDef   ::= "\\midi" "{" MidiDef "}";
separator ScoreDef "" ;

MidiTempo .     MidiDef    ::= "\\tempo" Integer "=" Integer ;


Major .         MajMin     ::= "\\major" ;-- TODO What more can fit in this? Going with majmin for now.
Minor .         MajMin     ::= "\\minor" ;

With .          WithBlock  ::= "\\with" "{" [WithDef] "}" ;  -- https://lilypond.org/doc/v2.20/Documentation/notation/changing-context-default-settings#changing-just-one-specific-context
InstName .      WithDef    ::= "instrumentName"      "=" String ; -- In the example #"Violin" ? So not Actually String? Token?
ShortInstName . WithDef    ::= "shortInstrumentName" "=" String ; -- In the example #"Vln. " ?
MidiInst .      WithDef    ::= "midiInstrument" "=" String ; -- TODO Also available as inline? http://lilypond.org/doc/v2.19/Documentation/notation/using-midi-instruments

separator WithDef "" ;

--http://lilypond.org/doc/v2.18/Documentation/notation/writing-parts#instrument-names
StringDef .     StrDef     ::= Ident "=" String ;

separator StrDef "" ;


token NoteToken ["abcdefgr"]({"es"} | {"is"})*["\',"]*(digit)*["."]* ;
-- From Earlier: Wrong? Uppercase notenames are not vaild.
-- token NoteToken "([A-Ha-hr])(es|is)*([',])*(\\d)*(\\.)*";
token VarToken {"\\"} letter+ ;

terminator MusicExpr "" ;
{-

global = {
  \key c \major
  \time 4/4
}

\new Staff \with {
    instrumentName = "Trumpet in C"
    midiInstrument = "trumpet"
  }
    \layout { }
    \midi {
      \tempo 4=100
    }
-}


{-
\version "2.20.0"

This single music expression may be of any size, and may contain other music expressions to any complexity. All of these examples are music expressions:

    { c'4 c' c' c' }

    {
      { c'4 c' c' c' }
      { d'4 d' d' d' }
    }

    <<
      \new Staff { c'4 c' c' c' }
      \new Staff { d'4 d' d' d' }
    >>

    {
      \new GrandStaff <<
        \new StaffGroup <<
          \new Staff { \flute }
          \new Staff { \oboe }
        >>
        \new StaffGroup <<
          \new Staff { \violinI }
          \new Staff { \violinII }
        >>
      >>
    }
-}


{-
To enter music with more voices or more staves, we combine expressions in parallel. To indicate that two voices should play at the same time, simply enter a simultaneous combination of music expressions. A ‘simultaneous’ music expression is formed by enclosing expressions inside << and >>. In the following example, three sequences (all containing two separate notes) are combined simultaneously:

    <<
      \relative { a'2 g }
      \relative { f'2 e }
      \relative { d'2 b }
    >>

-}
comment "%{" "%}" ;
comment "%";